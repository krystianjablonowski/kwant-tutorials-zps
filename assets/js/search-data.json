{
  
    
        "post0": {
            "title": "Title",
            "content": "!pip install kwant . Collecting kwant Downloading kwant-1.4.3.tar.gz (1.6 MB) |████████████████████████████████| 1.6 MB 5.1 MB/s Requirement already satisfied: numpy&gt;=1.11.0 in /usr/local/lib/python3.7/dist-packages (from kwant) (1.21.5) Requirement already satisfied: scipy&gt;=0.17.0 in /usr/local/lib/python3.7/dist-packages (from kwant) (1.4.1) Collecting tinyarray&gt;=1.2 Downloading tinyarray-1.2.4.tar.gz (37 kB) Building wheels for collected packages: kwant, tinyarray Building wheel for kwant (setup.py) ... done Created wheel for kwant: filename=kwant-1.4.3-cp37-cp37m-linux_x86_64.whl size=3691018 sha256=8896bbdf1f9a259d639769c35203835063ecb45951c0842773dd70bcce93bcc5 Stored in directory: /root/.cache/pip/wheels/d6/2d/93/6f395cd3f0798d7d9e161dce1c8b8c8bbd04d4547763c926de Building wheel for tinyarray (setup.py) ... done Created wheel for tinyarray: filename=tinyarray-1.2.4-cp37-cp37m-linux_x86_64.whl size=228000 sha256=33bc3180624b21951a842225f1c925d8ff912d6805ecb127f4c30d219bbde804 Stored in directory: /root/.cache/pip/wheels/85/c6/1c/6939e2931cfbff5df75758a06084bf67171b640ebdf5febd35 Successfully built kwant tinyarray Installing collected packages: tinyarray, kwant Successfully installed kwant-1.4.3 tinyarray-1.2.4 . import kwant from matplotlib import pyplot as plt import tinyarray as ta import numpy as np import scipy.sparse.linalg as sla import scipy . /usr/local/lib/python3.7/dist-packages/kwant/solvers/default.py:18: RuntimeWarning: MUMPS is not available, SciPy built-in solver will be used as a fallback. Performance can be very poor in this case. &#34;Performance can be very poor in this case.&#34;, RuntimeWarning) . def ssh_model(t_1=1.0, t_2=0.5): L=200 a=1 # Start with an empty tight-binding system and a single square lattice. # `a` is the lattice constant (by default set to 1 for simplicity. syst = kwant.Builder() lat = kwant.lattice.Polyatomic([[2*a, 0]], [[0, 0], [a, 0]]) lat.a, lat.b = lat.sublattices for n in range(L): syst[lat.a(n)] = 0 syst[lat.b(n)] = 0 # Left hopping for n in range(L): syst[lat.a(n), lat.b(n)] = t_1 # Left hopping for n in range(1,L): syst[lat.b(n-1), lat.a(n)] = t_2 leadless=syst leadless=leadless.finalized() leadless=leadless.hamiltonian_submatrix(sparse=True) sym_left_lead = kwant.TranslationalSymmetry([-2*a, 0]) left_lead = kwant.Builder(sym_left_lead) left_lead[lat.a(0)] = 0 left_lead[lat.b(0)] = 0 left_lead[lat.a(0), lat.b(0)] = t_1 left_lead[lat.b(0), lat.a(-1)] = t_2 syst.attach_lead(left_lead) left_lead_fin = left_lead.finalized() sym_right_lead = kwant.TranslationalSymmetry([2*a, 0]) right_lead = kwant.Builder(sym_right_lead) right_lead[lat.a(0)] = 0 right_lead[lat.b(0)] = 0 right_lead[lat.a(0), lat.b(0)] = t_1 right_lead[lat.a(0), lat.a(1)] = t_2 syst.attach_lead(right_lead) right_lead_fin = right_lead.finalized() syst = syst.finalized() return syst, left_lead_fin, right_lead_fin,leadless syst, left_lead, right_lead, leadless= ssh_model() kwant.plot(syst, file=&#39;ssh_2_atoms_in_cell.pdf&#39;) def compute_evs(sys): # Compute some eigenvalues of the closed system sparse_mat = sys.hamiltonian_submatrix(sparse=True) evs = sla.eigs(sparse_mat, 2)[0] print(evs.real) def plot_eigen_energy(): k_tab = np.linspace(0, 2, 200) energies = [] for t2 in k_tab: ham = ssh_model(0.5, t2) e_val, e_vec = scipy.sparse.linalg.eigsh(ham[3], k=16,sigma=0.001,which=&#39;LM&#39;, return_eigenvectors=True) e_val = np.sort(e_val) energies.append(e_val) plt.figure() plt.plot(k_tab, energies) plt.xlabel(&quot;t2&quot;) plt.ylabel(&quot;energy [t]&quot;) def plot_bandstructure(flead, momenta): bands = kwant.physics.Bands(flead) energies = [bands(k) for k in momenta] plt.figure() plt.plot(momenta, energies) plt.xlabel(&quot;momentum [(lattice constant)^-1]&quot;) plt.ylabel(&quot;energy [t]&quot;) plt.savefig(&#39;ssh_energy_bands.pdf&#39;) plt.show() plot_eigen_energy() compute_evs(syst) plot_bandstructure(left_lead, np.linspace(-np.pi, np.pi, 100)) #syst.hamiltonian_submatrix() . [-1.49995915 1.49995915] .",
            "url": "https://korsakjakub.github.io/fastpages-test/2022/05/31/SSH_2_atoms_in_cell.html",
            "relUrl": "/2022/05/31/SSH_2_atoms_in_cell.html",
            "date": " • May 31, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://korsakjakub.github.io/fastpages-test/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://korsakjakub.github.io/fastpages-test/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://korsakjakub.github.io/fastpages-test/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}